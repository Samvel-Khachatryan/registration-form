{"version":3,"sources":["Fragments/Form.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Form","props","onFormChange","e","key","target","name","value","setState","state","length","errors","filter","error","push","fileteredErrors","test","password","pname","surName","phone","age","sex","email","confirmPass","event","preventDefault","data","FormData","myData","fetch","method","body","console","log","this","style","border","onSubmit","handleSubmit","className","htmlFor","required","onChange","type","find","defaultValue","backgroundColor","borderRadius","width","height","onClick","formSubmit","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8a62c08b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            pname:'',\r\n            surName:'',\r\n            phone:'',\r\n            age:'',\r\n            sex:'',\r\n            email:'',\r\n            password:'',\r\n            confirmPass:'',\r\n            errors:[],\r\n        }\r\n    }\r\n    onFormChange =(e)=>{\r\n        const key=e.target.name;\r\n        const value=e.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [key]:value,\r\n        })\r\n        switch (key) {\r\n            case 'pname':\r\n                if(value.length<3){\r\n                    if(!this.state.errors.filter(error=>error[key]).length){\r\n                        this.state.errors.push({\r\n                            [key]:'Անվան Նվազագույն երկարությունը 2 նիշ'\r\n                        })\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [key]:value,\r\n                            errors: this.state.errors\r\n                        })\r\n                    }\r\n                }else{\r\n                    const fileteredErrors = this.state.errors.filter(error=>!error[key]);\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [key]:value,\r\n                        errors:fileteredErrors,\r\n                    })\r\n                }\r\n                break;\r\n            case 'surName':\r\n                if(value.length<4){\r\n                    if(!this.state.errors.filter(error=>error[key]).length){\r\n                        this.state.errors.push({\r\n                            [key]:'Ազգանվան Նվազագույն երկարությունը 4 նիշ'\r\n                        })\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [key]:value,\r\n                            errors: this.state.errors\r\n                        })\r\n                    }\r\n                }else{\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [key]:value,\r\n                        errors:this.state.errors.filter(error=>!error[key])\r\n                    })\r\n                }\r\n                break;\r\n            case 'phone':\r\n                if( !/^\\d+$/.test(value)){\r\n                    if(!this.state.errors.filter(error=>error[key]).length){\r\n                        this.state.errors.push({\r\n                            [key]:'Խնդրում ենք մուտքագրել միայն թվանշաններ'\r\n                        })\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [key]:value,\r\n                            errors: this.state.errors\r\n                        })\r\n                    }\r\n                }else{\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [key]:value,\r\n                        errors:this.state.errors.filter(error=>!error[key])\r\n                    })\r\n                }\r\n                break;\r\n\r\n            case 'age':\r\n                let ageReg= /^\\d+$/;\r\n                if(!ageReg.test(value)){\r\n                    if(!this.state.errors.filter(error=>error[key]).length){\r\n                        this.state.errors.push({\r\n                            [key]:'Խնդրում ենք մուտքագրել միայն թվանշաններ'\r\n                        })\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [key]:value,\r\n                            errors: this.state.errors\r\n                        })\r\n                    }\r\n                }else{\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [key]:value,\r\n                        errors:this.state.errors.filter(error=>!error[key])\r\n                    })\r\n                }\r\n                break;\r\n            case 'email':\r\n                let emailReg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                if( !emailReg.test(value)){\r\n                    if(!this.state.errors.filter(error=>error[key]).length){\r\n                        this.state.errors.push({\r\n                            [key]:'Խնդրում ենք մուտքագրել ճիշտ էլ հասցե'\r\n                        })\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [key]:value,\r\n                            errors: this.state.errors\r\n                        })\r\n                    }\r\n                }else{\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [key]:value,\r\n                        errors:this.state.errors.filter(error=>!error[key])\r\n                    })\r\n                }\r\n                break;\r\n            case 'password':\r\n                let passReg=  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^()/'\"_&*])(?=.{6,})/\r\n                if( !passReg.test(value)){\r\n                    if(!this.state.errors.filter(error=>error[key]).length){\r\n                        this.state.errors.push({\r\n                            [key]:'Գաղտնաբառը պետք է պարունակի առնվազն 1 մեծատառ, 1 սիմվոլ, 1 թվանշան, մինիմալ երկարությունը՝ 6 նիշ'\r\n                        })\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [key]:value,\r\n                            errors: this.state.errors\r\n                        })\r\n                    }\r\n                }else{\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [key]:value,\r\n                        errors:this.state.errors.filter(error=>!error[key])\r\n                    })\r\n                }\r\n                break;\r\n            case 'confirmPass':\r\n                if( value!==this.state.password){\r\n                    if(!this.state.errors.filter(error=>error[key]).length){\r\n                        this.state.errors.push({\r\n                            [key]:'Գաղտնաբառերը պետք է համապատասխանեն'\r\n                        })\r\n                        this.setState({\r\n                            ...this.state,\r\n                            [key]:value,\r\n                            errors: this.state.errors\r\n                        })\r\n                    }\r\n                }else{\r\n                    this.setState({\r\n                        ...this.state,\r\n                        [key]:value,\r\n                        errors:this.state.errors.filter(error=>!error[key])\r\n                    })\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n\r\n        let myData = fetch('/api/form-submit-url', {\r\n            method: 'POST',\r\n            body: data,\r\n        });\r\n        console.log(myData);\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <form style={{border:'3px solid gray'}} onSubmit={this.handleSubmit} className='demoForm'>\r\n                <h2>Գրանցում</h2>\r\n\r\n                    <label htmlFor='pname'>Անուն</label><br/>\r\n                    <input required onChange={this.onFormChange} value={this.state.name} type='text' name='pname'/><br/>\r\n                    <div className={'errormsg'}>{this.state.errors.find(error=>error.pname)?this.state.errors.find(error=>error.pname).pname:null}</div><br/>\r\n\r\n                    <label htmlFor='surName'>Ազգանուն</label><br/>\r\n                    <input required onChange={this.onFormChange} defaultValue={this.state.name} value={this.state.name} type='text' name='surName'/><br/>\r\n                    <div className={'errormsg'}>{this.state.errors.find(error=>error.surName)?this.state.errors.find(error=>error.surName).surName:null}</div><br/>\r\n\r\n                    <label htmlFor='phone'>Հեռախոսի համար</label><br/>\r\n                    <input onChange={this.onFormChange} value={this.state.name} type='text' name='phone'/><br/>\r\n                    <div className={'errormsg'}>{this.state.errors.find(error=>error.phone)?this.state.errors.find(error=>error.phone).phone:null}</div><br/>\r\n\r\n                    <label htmlFor='age'>Տարիք</label><br/>\r\n                    <input onChange={this.onFormChange} value={this.state.name} type='text' name='age'/><br/>\r\n                    <div className={'errormsg'}>{this.state.errors.find(error=>error.age)?this.state.errors.find(error=>error.age).age:null}</div><br/>\r\n\r\n                    <label htmlFor='sex'>Սեռ</label><br/>\r\n                    Արական։<input type=\"radio\" name=\"sex\" value=\"1\"/>  Իգական։<input type=\"radio\" name=\"sex\" value=\"0\"/><br/><br/>\r\n                    <div className={'errormsg'}>{this.state.errors.find(error=>error.sex)?this.state.errors.find(error=>error.sex).sex:null}</div><br/>\r\n\r\n                    <label htmlFor='email'>Էլեկտրոնային հասցե</label><br/>\r\n                    <input required onChange={this.onFormChange} value={this.state.name} type='text' name='email'/><br/>\r\n                    <div className={'errormsg'}>{this.state.errors.find(error=>error.email)?this.state.errors.find(error=>error.email).email:null}</div><br/>\r\n\r\n                    <label htmlFor='password'>Գաղտնաբառ</label><br/>\r\n                    <input required onChange={this.onFormChange} value={this.state.password} type='password' name='password'/><br/>\r\n                    <div className={'errormsg'}>{this.state.errors.find(error=>error.password)?this.state.errors.find(error=>error.password).password:null}</div><br/>\r\n\r\n                    <label htmlFor='confirmPass'>Հաստատել գաղտնաբառը</label><br/>\r\n                    <input required onChange={this.onFormChange} value={this.state.confirmPass} type='password' name='confirmPass'/><br/>\r\n                    <div className={'errormsg'}>{this.state.errors.find(error=>error.confirmPass)?this.state.errors.find(error=>error.confirmPass).confirmPass:null}</div><br/>\r\n                    <button style={{backgroundColor: '#4CAF50',borderRadius:'5px',width:'50px',height:'35px'}} type='submit' onClick={this.formSubmit} >Sign up</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\nimport './App.css';\nimport Form from \"./Fragments/Form\";\n\nclass App extends Component{\n    render() {\n        return (\n            <div className={'content'}>\n              <Form/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}